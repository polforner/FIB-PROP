package presentacio;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.undo.UndoManager;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

/**
 * Aquesta vista s'encarrega de fer creacio de document
 *
 * @author Zheshuo Lin
 */
public class vistaCreacio extends JFrame {

    /**
     * El panell que conte tots components de finestra
     */
    private JPanel lamina;
    /**
     * Area de text per introduir continguts
     */
    private JTextArea contingutActual;
    /**
     * Titol de la vista
     */
    private JLabel titolVista;
    /**
     * Boto per finalitzar la creacio i crear el document si no hi ha error
     */
    private JButton bFi;
    /**
     * Boto per fer redo
     */
    private JButton bRedo;
    /**
     * Boto per fer undo
     */
    private JButton bUndo;
    /**
     * Llista per guardar frases del contingut
     */

    private ArrayList<String> frases = new ArrayList<>();

    public vistaCreacio(String titol, String autor) {
        setBounds(500, 300, 500, 300);
        setContentPane(lamina);
        setVisible(true);

        UndoManager manager = new UndoManager();
        contingutActual.getDocument().addUndoableEditListener(manager);

        bUndo.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (manager.canUndo()) {
                    manager.undo();

                }

            }
        });

        bRedo.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (manager.canRedo()) {
                    manager.redo();

                }

            }
        });

        bFi.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                boolean exit = true;
                String con = contingutActual.getText();
                String[] cons = con.split("\n");
                for (String s : cons) {
                    if (s.length() > 0) {
                        frases.add(s);
                    }
                }
                if (frases.size() > 0) {
                    try {
                        CtrlPresentacio.creaDocument(titol, autor, frases);

                    } catch (Exception ex) {
                        new Missatge(ex.getMessage());
                        exit = false;
                    }
                } else {
                    new Missatge("El contingut no pot ser buit");
                    exit = false;
                }
                if (exit) {
                    new Missatge("El document s'ha creat correctament");
                    dispose();
                    setVisible(false);
                }


            }

        });
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        lamina = new JPanel();
        lamina.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        lamina.add(panel1, BorderLayout.NORTH);
        titolVista = new JLabel();
        titolVista.setText("Creacio");
        panel1.add(titolVista, BorderLayout.NORTH);
        final JLabel label1 = new JLabel();
        label1.setText("Introdueix contingut");
        panel1.add(label1, BorderLayout.SOUTH);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        lamina.add(panel2, BorderLayout.SOUTH);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel2.add(panel3, BorderLayout.CENTER);
        bFi = new JButton();
        bFi.setText("Crea");
        panel3.add(bFi);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel2.add(panel4, BorderLayout.NORTH);
        bRedo = new JButton();
        bRedo.setText("Redo");
        panel4.add(bRedo);
        bUndo = new JButton();
        bUndo.setText("Undo");
        panel4.add(bUndo);
        final JScrollPane scrollPane1 = new JScrollPane();
        lamina.add(scrollPane1, BorderLayout.CENTER);
        contingutActual = new JTextArea();
        contingutActual.setEditable(true);
        contingutActual.setLineWrap(true);
        contingutActual.setText("");
        contingutActual.setWrapStyleWord(false);
        scrollPane1.setViewportView(contingutActual);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return lamina;
    }

}
